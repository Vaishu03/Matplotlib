from mpl_toolkits import mplot3d
%matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
fig = plt.figure()
ax = plt.axes(projection = "3d")
zline = np.linspace(0,50,1000)
xline = np.sin(zline)
yline = np.cos(zline)
ax.plot3D(xline,yline,zline,'red')
zdata = 50*np.random.random(200)
xdata = np.sin(zdata) + 0.1*np.random.randn(200)
ydata = np.cos(zdata) + 0.1*np.random.randn(200)
ax.scatter3D(xdata,ydata,zdata,'yellow')
def f(x,y):
  return np.sin(np.sqrt(x**2 + y**2))
x = np.linspace(-6,6,30)
y = np.linspace(-6,6,30)
X,Y = np.meshgrid(x,y)
Z = f(X,Y)
fig = plt.figure()
ax = plt.axes(projection = '3d')
ax.contour(X,Y,Z,50,cmap='binary')
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('z')
theta = 2*np.pi*np.random.random(1000)
r = 6*np.random.random(1000)
x = np.ravel(r*np.sin(theta))
y = np.ravel(r*np.cos(theta))
z = f(x,y)
ax = plt.axes(projection = "3d")
ax.plot_trisurf(x,y,z,cmap='viridis',edgecolor='none')
